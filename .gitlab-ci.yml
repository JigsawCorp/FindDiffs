image: trion/ng-cli-karma

stages:
    - dependencies
    - lint
    - build
    - test
    - deploy

cache:
    paths:
        - client/node_modules
        - server/node_modules
dependencies:
    stage: dependencies
    script:
        - cd client && npm ci
        - cd ..
        - cd server && npm ci
    only:
        - master
        - develop
lint:
    stage: lint
    script:
        - cd client && npm run lint
        - cd ..
        - cd server && npm run lint
    only:
        - master
        - develop

build:
    stage: build
    script:
        - cd client && npm install && ng build
        - cd ..
        - cd server && npm install && npm run tsc
    only:
        - master
        - develop
test:
    stage: test
    script:
        - cd client && ng test --watch=false --code-coverage --browsers ChromeHeadlessNoSandbox
        - cd ..
        - cd server && npm run coverage -- --timeout 30000
    only:
        - master
        - develop
deploy:
    stage: deploy
    before_script:
        # Install ssh-agent if not already installed, it is required by Docker.
        # (change apt-get to yum if you use a CentOS-based image)
        - apt-get update
        - 'which ssh-agent || ( apt-get install openssh-client )'

        # Add bash
        - apt-get install bash

        # Add git
        - apt-get install git

        # Run ssh-agent (inside the build environment)
        - eval $(ssh-agent -s)

        # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
        - echo "$SSH_PRIVATE_KEY" | ssh-add -

        # For Docker builds disable host key checking. Be aware that by adding that
        # you are suspectible to man-in-the-middle attacks.
        # WARNING: Use this only with the Docker executor, if you use it with shell
        # you will overwrite your user's SSH config.
        # - mkdir -p ~/.ssh
        # - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
        # In order to properly check the server's host key, assuming you created the
        # SSH_SERVER_HOSTKEYS variable previously, uncomment the following two lines
        # instead.
        - mkdir -p .ssh
        - echo "$SSH_SERVER_HOSTKEYS" > .ssh/known_hosts
        - echo "    UserKnownHostsFile=$(pwd)/.ssh/known_hosts" > /etc/ssh/ssh_config
    script:
        - npm i -g pm2
        - pm2 deploy ecosystem.config.js production
    only: 
        - master
        - develop
    environment:
        name: develop
        url: http://log2990.martinpouliot.ca:3000/